"""
Django settings for TechParadise project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
from django.shortcuts import HttpResponseRedirect
from django.urls import reverse
from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
from .credentials import django_secret_key

SECRET_KEY = django_secret_key

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'applicant',
]


SITE_ID = 1

LOGIN_REDIRECT_URL = 'http://localhost:8000/redirect'
LOGOUT_REDIRECT_URL = 'http://localhost:8000/redirect'

from .credentials import google_client_id, google_client_secret_key

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': google_client_id,
            'secret': google_client_secret_key,
        }
    }
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'TechParadise.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'TechParadise.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = [
    # ...
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
    # ...
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = "/static/"
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR,"static","media")
STATIC_ROOT = os.path.join(BASE_DIR,"static","static_root")
STATICFILES_DIRS = [
    os.path.join(BASE_DIR,"static","static_files"),
]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

from .credentials import email, host, host_user, host_password

DEFAULT_FROM_EMAIL = email # RECEIVER'S MAIL ID

EMAIL_HOST = host
EMAIL_HOST_USER = host_user #SENDER'S MAIL ID
EMAIL_HOST_PASSWORD = host_password #SENDER'S MAIL PASSWORD
EMAIL_PORT = 587
EMAIL_USE_TLS = True

from .credentials import git_api_token

GIT_API_TOKEN = git_api_token

from .credentials import codeforces_api_key, codeforces_api_secret_key
CODEFORCES_API_KEY = codeforces_api_key
CODEFORCES_API_SECRET_KEY = codeforces_api_secret_key

from .credentials import x_rapidapi_codechef_key, x_rapidapi_codechef_host, x_rapidapi_codechef_url
X_RAPIDAPI_CODECHEF_KEY = x_rapidapi_codechef_key
X_RAPIDAPI_CODECHEF_HOST = x_rapidapi_codechef_host
X_RAPIDAPI_CODECHEF_URL = x_rapidapi_codechef_url